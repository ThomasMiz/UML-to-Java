@startuml

class PokemonClass {
    - final float damageMultiplier 'code: 1;
    - final String name
    'comment: El damageMultiplier permite que una clase de pokemon lastime m√°s :)

    # PokemonClass(String name, float damageMultiplier) /'
        code:
        this.name = name == null ? "Unknown" : name;
        this.damageMultiplier = damageMultiplier;
    '/ 'Cierro un comentario multilinea y abro uno de una linea!

    + float getDamageMultiplier() 'code: return damageMultiplier;
    + String getName() 'code: return name;

    'comment: Pedro '/''7/7'77///'77//'7///?7//?/?7?/?/?7/?77/77///?7/?//?/?7'7'7'7/?
}

class PokemonFireClass extends PokemonClass {
    + PokemonFireClass() 'code: super(1.2f);
    '      comment:      Pedro

}

abstract class Pokemon<T> { }

interface Truchamon<T, V> extends Truchada<T> {
    'comment: Alfajor grandote, doble triple sabor!
}

class Charizard extends Pokemon<PokemonFireClass> implements Iterable<Integer>, Truchamon<Faier, Integer>, String {
    - final {static} int pablo 'code: 0;
}

@enduml